{"ast":null,"code":"var _jsxFileName = \"/Users/rohannair/project-tracker-frontend/project-tracker-frontend/src/components/CommentModal/CommentModal.js\",\n  _s = $RefreshSig$();\n// src/components/CommentModal/CommentModal.js\nimport React, { useState, useEffect } from 'react';\nimport commentService from '../../services/commentService';\nimport './CommentModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentModal = ({\n  taskId,\n  taskTitle,\n  onClose\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchComments();\n  }, [taskId]);\n  const fetchComments = async () => {\n    try {\n      const data = await commentService.getComments(taskId);\n      setComments(data);\n    } catch (err) {\n      setError('Failed to fetch comments');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    setSubmitting(true);\n    setError('');\n    try {\n      await commentService.createComment(taskId, newComment.trim());\n      setNewComment('');\n      fetchComments();\n    } catch (err) {\n      setError('Failed to add comment');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Comments - \", taskTitle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading comments...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this) : comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-comments\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No comments yet. Be the first to comment!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comment-author\",\n                children: [comment.first_name, \" \", comment.last_name, \" (\", comment.username, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"comment-date\",\n                children: formatDate(comment.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-content\",\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newComment\",\n              children: \"Add a comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"newComment\",\n              value: newComment,\n              onChange: e => setNewComment(e.target.value),\n              placeholder: \"Write your comment here...\",\n              rows: \"3\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: submitting || !newComment.trim(),\n              children: submitting ? 'Adding...' : 'Add Comment'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentModal, \"IXmPrUrciCLWLoEeqCXKOuTaaFA=\");\n_c = CommentModal;\nexport default CommentModal;\nvar _c;\n$RefreshReg$(_c, \"CommentModal\");","map":{"version":3,"names":["React","useState","useEffect","commentService","jsxDEV","_jsxDEV","CommentModal","taskId","taskTitle","onClose","_s","comments","setComments","newComment","setNewComment","loading","setLoading","submitting","setSubmitting","error","setError","fetchComments","data","getComments","err","handleSubmit","e","preventDefault","trim","createComment","formatDate","dateString","date","Date","toLocaleString","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","length","map","comment","first_name","last_name","username","created_at","content","id","onSubmit","htmlFor","value","onChange","target","placeholder","rows","required","type","disabled","_c","$RefreshReg$"],"sources":["/Users/rohannair/project-tracker-frontend/project-tracker-frontend/src/components/CommentModal/CommentModal.js"],"sourcesContent":["// src/components/CommentModal/CommentModal.js\nimport React, { useState, useEffect } from 'react';\nimport commentService from '../../services/commentService';\nimport './CommentModal.scss';\n\nconst CommentModal = ({ taskId, taskTitle, onClose }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchComments();\n  }, [taskId]);\n\n  const fetchComments = async () => {\n    try {\n      const data = await commentService.getComments(taskId);\n      setComments(data);\n    } catch (err) {\n      setError('Failed to fetch comments');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n\n    setSubmitting(true);\n    setError('');\n\n    try {\n      await commentService.createComment(taskId, newComment.trim());\n      setNewComment('');\n      fetchComments();\n    } catch (err) {\n      setError('Failed to add comment');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>Comments - {taskTitle}</h2>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        <div className=\"comments-container\">\n          {loading ? (\n            <div className=\"loading\">Loading comments...</div>\n          ) : comments.length === 0 ? (\n            <div className=\"empty-comments\">\n              <p>No comments yet. Be the first to comment!</p>\n            </div>\n          ) : (\n            <div className=\"comments-list\">\n              {comments.map(comment => (\n                <div key={comment.id} className=\"comment-item\">\n                  <div className=\"comment-header\">\n                    <span className=\"comment-author\">\n                      {comment.first_name} {comment.last_name} ({comment.username})\n                    </span>\n                    <span className=\"comment-date\">\n                      {formatDate(comment.created_at)}\n                    </span>\n                  </div>\n                  <div className=\"comment-content\">\n                    {comment.content}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"comment-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"newComment\">Add a comment</label>\n              <textarea\n                id=\"newComment\"\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n                placeholder=\"Write your comment here...\"\n                rows=\"3\"\n                required\n              />\n            </div>\n            <div className=\"form-actions\">\n              <button type=\"submit\" disabled={submitting || !newComment.trim()}>\n                {submitting ? 'Adding...' : 'Add Comment'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentModal;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}